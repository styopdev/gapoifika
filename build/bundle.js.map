{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.50.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\n\texport let movies;\n\tlet question, timeout, answer = '', interval;\n\n\tfunction getAnswer() {\n\t\tlet randomIndex = Math.floor(Math.random() * movies.length);\n\t\tinterval && clearInterval(interval);\n\t\tquestion = movies[randomIndex];\n\t\tconst questionParts = question.split(' ');\n\n\t\tif (questionParts.length <= 1) {\n\t\t\treturn getAnswer();\n\t\t}\n\n\t\tfor (let i = 0; i < questionParts.length; i++) {\n\t\t\tif (isFinite(questionParts[i])) {\n\t\t\t\tanswer = '';\n\t\t\t\treturn getAnswer();\n\t\t\t}\n\t\t\tanswer += questionParts[i].substr(0, 1).toUpperCase();\n\t\t\tanswer += questionParts[i].substr(1, 1);\n\t\t}\n\n\t\tdocument.getElementById('area').innerHTML = answer;\n\t\tdocument.getElementById('result').innerHTML = '';\n\t\tdocument.getElementById('result').className = '';\n\t\tdocument.getElementById('form').reset();\n\t\tanswer = '';\n\n\t\ttimeout = 10;\n\t\tdocument.getElementById('show-answer').disabled = true;\n\n\t\tinterval = setInterval(() => {\n\t\t\tdocument.getElementById('show-answer').innerHTML = 'Показать ответ (' + timeout + ')';\n\t\t\ttimeout--;\n\t\t\tif (!timeout) {\n\t\t\t\tdocument.getElementById('show-answer').disabled = false;\n\t\t\t\tdocument.getElementById('show-answer').innerHTML = 'Показать ответ';\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t}, 1000);\n\t}\n\n\tfunction showAnswer() {\n\t\tdocument.getElementById('area').innerHTML = question;\n\t}\n\n\tfunction checkAnswer(event) {\n\t\tconst answ = (event.target[0].value || '').replace('/', '').replace('-', '').replace(':', '');\n\n\t\tif (question.toLowerCase().trim() == answ.toLowerCase().trim()) {\n\t\t\tdocument.getElementById('result').innerHTML = 'Да, это правильный ответ :)';\n\t\t\tdocument.getElementById('result').className = 'green';\n\t\t} else {\n\t\t\tdocument.getElementById('result').innerHTML = 'Чуть-чуть не так :(';\n\t\t\tdocument.getElementById('result').className = 'red';\n\t\t}\n\t}\n\twindow.onload = getAnswer;\n</script>\n\n<main>\n\t<h1>ГаПоИФиКа</h1>\n\t<div class=\"content\">\n\t\t<div id=\"area\" class=\"area\">\n\n\t\t</div>\n\t\t<div id=\"result\" class=\"red green\">\n\t\n\t\t</div>\n\t</div>\n\t\n\t<button class=\"refresh\" on:click={getAnswer}>Обновить</button>\n\t<button id =\"show-answer\" class=\"refresh\" on:click={showAnswer}>Показать ответ</button>\n\t\n\t<form id='form' class=\"check-gapo-form\" on:submit|preventDefault={checkAnswer}>\n\t\t<input type=\"text\">\n\t\t<input type=\"submit\" value=\"Проверить\">\n\t</form>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n\t\n\t.area {\n\t\tborder: 3px solid #ff3e00;\n\t\tcolor: #ff3e00;\n\t\twidth: 500px;\n\t\theight: 100px;\n\t\tfont-size: 60px;\n\t\tline-height: 100px;\n\t\toverflow-x: auto;\n        overflow-y: hidden;\n\t\twhite-space: nowrap;\n\t\t\n\t}\n\n\t.content {\n\t\twidth: 500px;\n\t\tmargin: 0 auto;\n\t}\n\n\t#result {\n\t\theight: 20px;\n\t\tfont-size: 16px;\n\t}\n\n\t.check-gapo-form {\n\t\tmargin-top: 20px;\n\t}\n\n\t.refresh {\n\t\tmargin-top: 20px;\n\t}\n\t#result.green {\n\t\tcolor: rgb(30, 204, 30);\n\t}\n\t#result.red {\n\t\tcolor: rgb(196, 15, 15);\n\t}\n</style>","import App from './App.svelte';\n\nconst movies = [\"А вот и гости\",\"А как же Боб\",\"Аббатство Даунтон\",\"Авалон\",\"Аватар\",\"Авеню 5\",\"Авиатор\",\"Автостопом по галактике\",\"Агент 117\",\"Агент 117: Из Африки с любовью\",\"Агент 117: миссия в Рио\",\"Агенты А.Н.К.Л.\",\"Адаптация\",\"Адреналин\",\"Адреналин 2\",\"Адское такси\",\"Азартные игры\",\"Академия Рашмор\",\"Александр\",\"Алёша Попович и Тугарин Змей\",\"Алиса в Зазеркалье\",\"Алиса в Стране чудес\",\"Аллея кошмаров\",\"Альфа Дог\",\"Алюминиевые человечки\",\"Амели\",\"Американская история Х\",\"Американская мечта\",\"Американский оборотень в Париже\",\"Американский пирог\",\"Американцы\",\"Анализируй то\",\"Анализируй это\",\"Ангел-А\",\"Ангелы и демоны\",\"Ангелы Чарли\",\"Ангелы Чарли: Только вперед\",\"Аннигиляция\",\"Антикиллер\",\"Антикиллер 2: Антитеррор\",\"Антикиллер Д.К: Любовь без памяти\",\"Анчартед: На картах не значится\",\"Апгрейд\",\"Апокалипсис\",\"Апрель\",\"Арахисовый сокол\",\"Аризонская мечта\",\"Аритмия\",\"Армагеддец\",\"Армагеддон\",\"Армия воров\",\"Артефакт\",\"Артист\",\"Артистка\",\"Астерикс и Обеликс против Цезаря\",\"Астерикс и Обеликс: миссия Клеопатра\",\"Астерикс на олимпийских играх\",\"Афера\",\"Афера по-американски\",\"Афера под прикрытием\",\"Афера Томаса Крауна\",\"Аферистка\",\"Аферисты: Дик и Джейн развлекаются\",\"Бабло\",\"Багровые реки\",\"Багси\",\"Багси Мэлоун\",\"База 'Клейтон'\",\"Бал монстров\",\"Балда\",\"Баллада Бастера Скраггса\",\"Баллистика: Экс против Сивер\",\"Бандитки\",\"Бандиты\",\"Банды Лондона\",\"Банды Нью-Йорка\",\"Банкир\",\"Банши\",\"Барри\",\"Беги без оглядки\",\"Беги, Лола, беги\",\"Беги, толстяк, беги\",\"Бедные люди\",\"Бедные родственники\",\"Без вины виноватый\",\"Без границ\",\"Без компромиссов\",\"Без лица\",\"Без чувств\",\"Безо всяких улик\",\"Безумная свадьба\",\"Безумно богатые азиаты\",\"Безумное свидание\",\"Безумные подмостки\",\"Безумные похороны\",\"Безумный Макс: Дорога ярости\",\"Безумный спецназ\",\"Бей в кость\",\"Белфаст\",\"Белый тигр\",\"Бёрдмэн\",\"Бесподобный мистер Фокс\",\"Беспредел в высшей школе\",\"Бесславные ублюдки\",\"Бессонница\",\"Бешеные псы\",\"Бешеный пес и Глория\",\"Билли Батгейт\",\"Билли-фингал\",\"Биоволк\",\"Битва полов\",\"Битые пиксели\",\"Благие знамения\",\"Благодетель\",\"Бладшот\",\"Блейд II\",\"Близнецы\",\"Близость\",\"Блондинка в законе\",\"Бобро Поржаловать\",\"Богемская рапсодия\",\"Боги и монстры\",\"Боги, наверное, сошли с ума\",\"Богиня: как я полюбила\",\"Боец\",\"Боже, благослови Америку\",\"Бой с тенью\",\"Бой с тенью 3D: Последний раунд\",\"Бойфренд из будущего\",\"Бойцовский клуб\",\"Боль и слава\",\"Большая афера\",\"Большая игра\",\"Большая секунда\",\"Больше, чем жизнь\",\"Большие глаза\",\"Большие гонки\",\"Большие неприятности\",\"Большой злой лис и другие сказки\",\"Большой Кахуна\",\"Большой куш\",\"Большой куш\",\"Большой Куш\",\"Большой Лебовски\",\"Бонни и Клайд\",\"Босс\",\"Брат якудзы\",\"Братва\",\"Братство волка\",\"Братья Гримм\",\"Братья Систерс\",\"Брачная история\",\"Бригада: наследник\",\"Бриллиантовый картель\",\"Бриллиантовый полицейский\",\"Бросок кобры\",\"Бросок кобры 2\",\"Бруклинские полицейские\",\"Брюс всемогущий\",\"Будь круче\",\"Бумажный дом\",\"Бумажный дом - пятый сезон, первая часть\",\"Бумажный дом. Третий сезон\",\"Бумер\",\"Буфингер\",\"Бывшие: Лучшие друзья!\",\"Быстрее пули\",\"Быстрые перемены\",\"Быстрые стволы\",\"Быстрый и мертвый\",\"Быть Джоном Малковичем\",\"Бэтмен\",\"Бэтмен против Супермена: На заре справедливости\",\"Бэтмен: начало\",\"В Бореньке чего-то нет\",\"В джазе только девушки\",\"В конце туннеля\",\"В ловушке времени\",\"В погоне за Бонни и Клайдом\",\"В поисках Галактики\",\"В порту\",\"В последний момент\",\"В спальне\",\"В тихом омуте\",\"В этом мире я больше не чувствую себя как дома\",\"Вавилон\",\"Вавилон н. э.\",\"Валентинка\",\"ВАЛЛ-И\",\"Вампиры средней полосы\",\"Ван Гоги\",\"Ван Хельсинг\",\"Ванда/Вижн\",\"Ванильное небо\",\"Варяг\",\"Ватель\",\"Вверх\",\"Вдовы\",\"Великий Гэтсби\",\"Великий уравнитель\",\"Великий уравнитель 2\",\"Великолепная афера\",\"Великолепная семерка\",\"Величайший шоумен\",\"Веном\",\"Вертикальный предел\",\"Ветреная река\",\"Вечерний туалет\",\"Вечная жизнь Александра Христофорова\",\"Вечно молодой\",\"Вечное сияние чистого разума\",\"Взломщики сердец\",\"Взрыв из прошлого\",\"Взрывная блондинка\",\"Взять Тарантину\",\"Видоизмененный углерод\",\"Визави\",\"Визит дамы\",\"Виновный\",\"Вирус\",\"Властелин колец: братство кольца\",\"Властелин колец: возвращение короля\",\"Властелин колец: две башни\",\"Власть\",\"Власть пса\",\"Вне закона\",\"Вне поля зрения\",\"Внутреннее расследование\",\"Внутри Льюина Дэвиса\",\"Во власти Луны\",\"Во власти наваждения\",\"Во время грозы\",\"Во все тяжкие\",\"Во всё тяжкое\",\"Во всем виноват посыльный\",\"Водитель для Веры\",\"Водная жизнь\",\"Военно-полевой госпиталь\",\"Военный ныряльщик\",\"Возвращение героя\",\"Возвращение мушкетеров, или Сокровища кардинала Мазарини\",\"Воздушная тюрьма\",\"Воздушный маршал\",\"Возмещение ущерба\",\"Война\",\"Война будущего\",\"Война миров\",\"Война миров Z\",\"Вокруг света за 80 дней\",\"Волк с Уолл-стрит\",\"Волкодав\",\"Вольт\",\"Воображариум доктора Парнаса\",\"Воровка\",\"Ворон\",\"Ворчун\",\"Восемь миллиметров\",\"Восемь с половиной долларов\",\"Воскрешая мертвецов\",\"Воспитанные волками\",\"Восстание планеты обезьян\",\"Восток есть Восток\",\"Впритык\",\"Враг государства\",\"Вратарь Галактики\",\"Время\",\"Время бешеных псов\",\"Время первых\",\"Все без ума от Мэри\",\"Всё везде и сразу\",\"Все включено\",\"Все включено 2\",\"Все возможно, бэби\",\"Все и сразу\",\"Все могу\",\"Все о моей матери\",\"Вспомнить все\",\"Встречное расследование\",\"Вторая жизнь Уве\",\"Вторжение\",\"Второе дыхание\",\"Вы звонили, милорд?\",\"Выбор судьбы\",\"Высокая мода\",\"Выстрел в пустоту\",\"Высшая лига\",\"Вышибалы\",\"Гадкий я\",\"Гадкий я 3\",\"Галавант\",\"Гангстер\",\"Гангстер, коп и дьявол\",\"Гангстеры\",\"Гарольд и Кумар уходят в отрыв\",\"Гарри Браун\",\"Где моя тачка, чувак?\",\"Где тебя носило?\",\"Геймер\",\"Гена-Бетон\",\"Генеральская дочь\",\"Генри Фул\",\"Героические лузеры\",\"Герой\",\"Герой\",\"Главная роль\",\"Главный герой\",\"Глаза Тэмми Фэй\",\"Глубже!\",\"Глубокое синее море\",\"Гнев\",\"Гнев человеческий\",\"Годы\",\"Голгофа\",\"Голиаф\",\"Голливудские копы\",\"Голливудский финал\",\"Головоломка\",\"Голоса за кадром\",\"Голубая бездна\",\"Голый король\",\"Гонка\",\"Гонщик\",\"Город бога\",\"Город воров\",\"Город грехов\",\"Город грехов 2: Женщина, ради которой стоит убивать\",\"Город Зеро\",\"Городская полиция\",\"Горько\",\"Горько 2\",\"Горячие новости\",\"Господин Никто\",\"Госпожа горничная\",\"Госфорд Парк\",\"Грабеж\",\"Гравитация\",\"Гран Торино\",\"Грань будущего\",\"Граф Монте-Кристо\",\"Грейхаунд\",\"Грешники\",\"Громкая связь\",\"Гуд бай, Ленин!\",\"Гудзонский ястреб\",\"Гуляй, Вася!\",\"Гуляй, Вася! Свидание на Бали\",\"Да здравствует Цезарь!\",\"Давай еще, Тэд\",\"Давай разведемся!\",\"Давай сделаем это по-быстрому\",\"Даже не думай\",\"Далласский клуб покупателей\",\"Даун Хаус\",\"Два ствола\",\"Двадцать одно\",\"Двенадцатая ночь\",\"Двенадцать друзей Оушена\",\"Двенадцать обезьян\",\"Двое - это слишком\",\"Двойник\",\"Двойник\",\"Двойной КОПец\",\"Девушка из воды\",\"Девушка из кафе\",\"Девушка с татуировкой дракона\",\"Девушка, подающая надежды\",\"Девятые врата\",\"Дед, привет\",\"Дежа Вю\",\"Дежа вю\",\"Декстер: Новая кровь\",\"Делай ноги\",\"Дело Коллини\",\"Дело Ричарда Джуэлла\",\"День выборов\",\"День выборов 2\",\"День Д\",\"День денег\",\"День курка\",\"День независимости\",\"День радио\",\"День сурка\",\"День, когда Земля остановилась\",\"Деньги на двоих\",\"Деньги решают все\",\"Дес\",\"Десятидюймовый герой\",\"Дети природы\",\"Детство Шелдона\",\"Джанго освобожденный\",\"Джей и молчаливый Боб наносят ответный удар\",\"Джейсон Борн\",\"Джек Булл\",\"Джек Райан\",\"Джек Ричер\",\"Джек Ричер\",\"Джек Ричер 2: Никогда не возвращайся\",\"Джекпот\",\"Джентльмены\",\"Джерри Магуайер\",\"Джильи\",\"Джокер\",\"Джон Уик\",\"Джон Уик 2\",\"Джон Уик 3\",\"Джонни Д.\",\"Джуманджи: Новый уровень\",\"Дик Трэйси\",\"Дикари\",\"Дикая история\",\"Дикая штучка\",\"Дикие истории\",\"Дикие предки\",\"Дикий, дикий Уэст\",\"Диктатор\",\"Дитя человеческое\",\"ДМБ: Снова в бою\",\"Дневник Бриджет Джонс\",\"Дневник его жены\",\"Дневной дозор\",\"До свидания там, наверху\",\"Доберман\",\"Добро пожаловать в Зомбилэнд\",\"Добро пожаловать в Коллинвуд\",\"Довод\",\"Догма\",\"Дождливый день в Нью-Йорке\",\"Доказательство жизни\",\"Доказательство смерти\",\"Доктор\",\"Доктор Мартин\",\"Доктор Стрэндж\",\"Доктор Стрэндж: В мультивселенной безумия\",\"Долгое падение\",\"Дом Большой Мамы\",\"Дом вверх дном\",\"Дом Гуччи\",\"Дом из песка и тумана\",\"Дом летающих кинжалов\",\"Дом на Турецкой улице\",\"Домашний арест\",\"Домино\",\"Донни Браско\",\"Донни Дарко\",\"Дорога на Арлингтон\",\"Дорогие товарищи\",\"Дорожное приключение\",\"Достать коротышку\",\"Достать коротышку\",\"Достать ножи\",\"Достучаться до небес\",\"Драйв\",\"Драйвер-Икс\",\"Драка в блоке 99\",\"Дракула\",\"Друзья Питера\",\"Друзья: Воссоединение\",\"Дрянь\",\"Дублер\",\"Дублеры\",\"Дура\",\"Дурацкое дело нехитрое\",\"Душа\",\"Дуэлянт\",\"Дьявол в деталях\",\"Дьявол всегда здесь\",\"Дэдвуд\",\"Дэдпул\",\"Дэдпул 2\",\"Дюна\",\"Дюнкерк\",\"Европа-Азия\",\"Единственный выход\",\"Елки\",\"Елки 2\",\"Если бы красота убивала\",\"Еще одна из рода Болейн\",\"Еще по одной\",\"Жажда смерти\",\"Жара\",\"Жасмин\",\"Железная хватка\",\"Железные небеса\",\"Железный человек\",\"Железный Человек 2\",\"Железный человек 3\",\"Жена\",\"Жена астронавта\",\"Женщины и мужчины - истории соблазнений\",\"Жестокие игры\",\"Жизнь впереди\",\"Жизнь и необычайные приключения солдата Ивана Чонкина\",\"Жизнь как чудо\",\"Жизнь Пи\",\"Жизнь прекрасна\",\"Жили-были\",\"Жмурки\",\"За бортом\",\"За канделябрами\",\"За спичками\",\"Зависнуть в Палм-Спрингс\",\"Зависть богов\",\"Завтрак для чемпионов\",\"Загрузка\",\"Загрузка. Второй сезон\",\"Зажигание\",\"Зак и Мири снимают порно\",\"Закатать в асфальт\",\"Законопослушный гражданин\",\"Закону тут не место\",\"Законы границ\",\"Залечь на дно в Брюгге\",\"Заложник\",\"Заложница\",\"Заложница 2\",\"Заложница 3\",\"Замуж на 2 дня\",\"Замужем за мафией\",\"Занесло\",\"Заплати другому\",\"Запределье\",\"Запрещенная реальность\",\"Запрещенный прием\",\"Засланец из космоса\",\"Засланец из космоса. Второй сезон\",\"Затерянный город\",\"Затоiчи\",\"Захочу и соскочу\",\"ЗащитнЕг\",\"Защитники\",\"Защищая Джейкоба\",\"Заяц над бездной\",\"Звезда родилась\",\"Звездная пыль\",\"Звездный десант\",\"Зверопой\",\"Зверопой 2\",\"Зверополис\",\"Звоните ДиКаприо!\",\"Звонок\",\"Звук металла\",\"Здесь была Бритт-Мари\",\"Здесь и сейчас\",\"Здесь курят\",\"Здравствуйте, мы ваша крыша\",\"Зеленая книга\",\"Зеленая миля\",\"Зеленое крыло\",\"Земля кочевников\",\"Зеркальные войны: отражение первое\",\"Зеро 2\",\"Зеро 3\",\"Змей\",\"Знаки\",\"Знакомство с родителями\",\"Знакомство с Факерами\",\"Знакомьтесь, Джо Блэк\",\"Знаменитость\",\"Значит, война?\",\"Зодиак\",\"Золотой компас\",\"Зомби по имени Шон\",\"Зона комфорта\",\"Игра\",\"Игра в кальмара\",\"Игра в правду\",\"Игра навылет\",\"Игры джентльменов\",\"Игры разума\",\"Игры шпионов\",\"Идальго: погоня в пустыне\",\"Идеал\",\"Идеальное убийство\",\"Идеальные незнакомцы\",\"Идеальный побег\",\"Идентификация\",\"Идентификация Борна\",\"Из машины\",\"Из Парижа с любовью\",\"Изображая жертву\",\"Изобретение лжи\",\"Иллюзионист\",\"Иллюзия обмана\",\"Имя\",\"Инглиш-винглиш\",\"Индиана Джонс и королевство хрустального черепа\",\"Индюки: Назад в будущее\",\"Инкассатор\",\"Инопланетное вторжение: битва за Лос-Анджелес\",\"Иностранец\",\"Интервью\",\"Интервью с вампиром: вампирские хроники\",\"Интернэшнл\",\"Интерстеллар\",\"Ирландец\",\"Ирония судьбы. Продолжение\",\"Искусственный разум\",\"Искусство самообороны\",\"История игрушек 4\",\"История игрушек: Большой побег\",\"История любви\",\"История о нас\",\"История рыцаря\",\"История с ожерельем\",\"Исходный код\",\"Исчезнувшая\",\"К черту на рога\",\"Казино\",\"Казино «Рояль»\",\"Как Витька Чеснок вез Леху Штыря в дом инвалидов\",\"Как отделаться от парня за 10 дней\",\"Как потерять друзей и заставить всех тебя ненавидеть\",\"Как приручить дракона\",\"Как приручить дракона 2\",\"Как приручить дракона 3\",\"Как сказал Джим\",\"Кактус\",\"Калифорния\",\"Камон Камон\",\"Камуфляж и шпионаж\",\"Кандагар\",\"Каникулы мечты\",\"Каникулы строгого режима\",\"Капитан Фантастик\",\"Каратель\",\"Каратель\",\"Карп отмороженный\",\"Картахена\",\"Карточный домик\",\"Карты, деньги & два ствола\",\"Квадрат\",\"Квант милосердия\",\"Кидалы\",\"Кинг Конг\",\"Кислотный дом\",\"Класс\",\"Клерки\",\"Клерки 2\",\"Клетка\",\"Клетка для пташек\",\"Клуб\",\"Клуб Коттон\",\"Клуб любителей книг и пирогов из картофельных очистков\",\"Ключ Саламандры\",\"Ключи от машины\",\"Книга джунглей\",\"Книга Илая\",\"Код 100\",\"Код апокалипсиса\",\"Код да Винчи\",\"Код доступа 'Кейптаун'\",\"Козырные тузы\",\"Кококо\",\"Колесо фортуны\",\"Коллектор\",\"Коломбиана\",\"Кома\",\"Команда 'А'\",\"Команда Америка: мировая полиция\",\"Комодо остров ужаса\",\"Компаньоны\",\"Конец света\",\"Константин: повелитель тьмы\",\"Конфетти\",\"Координаты Скайфолл\",\"Копейка\",\"Копы в глубоком запасе\",\"Корабль-призрак\",\"Коралина в стране кошмаров\",\"Королевский корги\",\"Королевство полной луны\",\"Короли интриги\",\"Короли улиц\",\"Короли шутки\",\"Король Артур\",\"Король вечеринок\",\"Король говорит!\",\"Король Нью-Йорка\",\"Король Ричард\",\"Корпорация 'Война'\",\"Космические силы\",\"Костюм\",\"Кот в сапогах\",\"Кофе и сигареты\",\"Кошачьи миры Луиса Уэйна\",\"Крадущийся тигр, затаившийся дракон\",\"Красивая жизнь\",\"Красная планета\",\"Красное уведомление\",\"Красный отель\",\"Красный призрак\",\"Красота по-американски\",\"Крепкий орешек 4\",\"Крепкий орешек: Хороший день, чтобы умереть\",\"Крестные отцы\",\"Крестный отец\",\"Крестный отец II\",\"Крестный отец III\",\"Криминальное чтиво\",\"Кровавая Мари\",\"Кровавый алмаз\",\"Кровавый четверг\",\"Кровные узы\",\"Крокодил Данди в Лос-Анджелесе\",\"Кролик Джоджо\",\"Круиз по джунглям\",\"Крупная ставка\",\"Крутые времена\",\"Круэлла\",\"Крысиные бега\",\"Кто вы, мистер Брукс?\",\"Куда приводят мечты\",\"Кукушка\",\"Кунг-фу панда\",\"Кунг-фу панда 2\",\"Кушать подано\",\"Ла-Ла Ленд\",\"Лабиринт Фавна\",\"Лак для волос\",\"Лакричная пицца\",\"Лански\",\"Лара Крофт, расхитительница гробниц\",\"Ларго Винч 2: Заговор в Бирме\",\"Ларго Винч: начало\",\"Легенда\",\"Легенда №17\",\"Легенда Зорро\",\"Легенда о Зелёном рыцаре\",\"Легенда о пианисте\",\"Легенды осени\",\"Легкие деньги\",\"Легко живется с закрытыми глазами\",\"ЛЕГО Фильм\",\"Ледниковый период\",\"Ледниковый период 2: Глобальное потепление\",\"Ледниковый период 3: Эра динозавров\",\"Ледниковый период 4: Континентальный дрейф\",\"Ледяной драйв\",\"Ледяной урожай\",\"Лезвия славы: звездуны на льду\",\"Ленинградские ковбои едут в Америку\",\"Лесная братва\",\"Летучий отряд Скотланд-Ярда\",\"Лига выдающихся джентльменов\",\"Лига справедливости\",\"Линкольн для адвоката\",\"Липучка\",\"Лихорадка джунглей\",\"Лицо со шрамом\",\"Личный номер\",\"Лови волну\",\"Логан\",\"Локи\",\"Лондонские псы\",\"Лофт\",\"Лузеры\",\"Лука\",\"Луна 2112\",\"Лунная афера\",\"Лунный папа\",\"Лучше звоните Солу\",\"Лучше звоните Солу. Шестой сезон\",\"Лучшее предложение\",\"Лэйк Плэсид: озеро страха\",\"Любимцы Америки\",\"Любители истории\",\"Любовник\",\"Любовный эликсир №9\",\"Любовь в большом городе 2\",\"Любовь и сигареты\",\"Любовь от всех болезней\",\"Любовь по правилам... и без\",\"Любовь с акцентом\",\"Любовь-Морковь\",\"Любовь-морковь 2\",\"Любовь, смерть и роботы\",\"Любой ценой\",\"Люди в черном 2\",\"Люди в черном 3\",\"Люди в черном: Интернэшнл\",\"Люди Икс: Дни минувшего будущего\",\"Люди икс: начало. Росомаха\",\"Люди Икс: Первый класс\",\"Люди икс. Последняя битва\",\"Люди мафии\",\"Люпен\",\"Люси\",\"Лютер\",\"Мавританец\",\"Магнолия\",\"Мадагаскар\",\"Мадагаскар 2\",\"Мадагаскар 3\",\"Мажестик\",\"Майкл Клейтон\",\"Майор Гром: Чумной доктор\",\"Макс Пэйн\",\"Максимальный удар\",\"Малавита\",\"Маленькая мисс Счастье\",\"Маленькая смерть\",\"Маленькие секреты\",\"Маленькие секреты большой компании\",\"Малхолланд драйв\",\"Малыш на драйве\",\"Мальчики-налетчики\",\"Мальчишник\",\"Мальчишник 2: из Вегаса в Бангкок\",\"Мальчишник в Вегасе\",\"Мама не горюй 2\",\"Мама, не горюй\",\"Мамма Миа!\",\"Манк\",\"Марс атакует!\",\"Марсианин\",\"Мартовские иды\",\"Матрица\",\"Матрица: Воскрешение\",\"Матрица: Перезагрузка\",\"Матрица: Революция\",\"Матрица: революция перезагрузки (сборник высказываний)\",\"Матрица: эволюция революции (сборник высказываний с форума)\",\"Матч поинт\",\"Мафия: игра на выживание\",\"Мачете\",\"Мачете убивает\",\"Машина времени\",\"Маяк\",\"Мгла\",\"Мегамозг\",\"Медвежатник\",\"Медленные лошади\",\"Между ангелом и бесом\",\"Мейр из Исттауна\",\"Мексиканец\",\"Мелкие мошенники\",\"Меня зовут Долемайт\",\"Меня зовут Троица\",\"Меняющие реальность\",\"Мертв для меня\",\"Мертвец\",\"Мертвые дочери\",\"Место встречи\",\"Месть от кутюр\",\"Метод\",\"Метод Комински\",\"Механик\",\"Меч короля Артура\",\"Меченосец\",\"Мечта Кассандры\",\"Микки - голубые глазки\",\"Миллиард\",\"Миллиарды\",\"Миллион способов потерять голову\",\"Миллионер из трущоб\",\"Миллионер поневоле\",\"Миньоны\",\"Миньоны: Грювитация\",\"Мир призраков\",\"Миротворец\",\"Мисс Петтигрю\",\"Миссис Даутфайр\",\"Миссис Хендерсон представляет\",\"Миссия «Серенити»\",\"Миссия на Марс\",\"Миссия невыполнима - 2\",\"Миссия невыполнима: Племя изгоев\",\"Миссия невыполнима: Последствия\",\"Миссия невыполнима: Протокол Фантом\",\"Миссия: невыполнима 3\",\"Мистер Бейсбол\",\"Мистер и миссис Смит\",\"Мистер Судьба\",\"Мистериум. Начало\",\"Митчеллы против машин\",\"Мне бы в небо\",\"Множественные святые Ньюарка\",\"Моана\",\"Модильяни\",\"Мои голубые небеса\",\"Мой кузен Винни\",\"Мой лучший любовник\",\"Мой любимый марсианин\",\"Мокасины Маниту\",\"Молодость\",\"Молодость, больница, любовь\",\"Молчи в тряпочку\",\"Монах и бес\",\"Монстр в Париже\",\"Монстры на каникулах 3: Море зовет\",\"Монстры против пришельцев\",\"Монтана\",\"Мордекай\",\"Мороз по коже\",\"Морской бой\",\"Московская жара\",\"Мост\",\"Мошенники\",\"Моя большая греческая свадьба\",\"Мстители\",\"Мстители: Война бесконечности\",\"Мстители: Финал\",\"Мстители: Эра Альтрона\",\"Мужские надежды\",\"Мужской сезон: бархатная революция\",\"Мужской стриптиз\",\"Мужчина по вызову\",\"Музыкальный конкурс \\\"Евровидение\\\": История группы Fire Saga\",\"Мулен Руж\",\"Мумия\",\"Мумия 3: Гробница императора драконов\",\"Мумия возвращается\",\"Мушкетер\",\"Мушкетеры\",\"Мы\",\"Мы - легенды\",\"Мы - Миллеры\",\"Мы - не ангелы\",\"Мы из будущего\",\"Мышьяк и старые кружева\",\"Мэр Кингстауна\",\"На грани\",\"На игре\",\"На крючке\",\"На море!\",\"На обочине\",\"На свете живут добрые и хорошие люди\",\"Набережная Орфевр, 36\",\"Нагиев на карантине\",\"Нападение на 13-й участок\",\"Напролом\",\"Нарко\",\"Наркокурьер\",\"Наследники\",\"Наследники. Третий сезон\",\"Настоящая любовь\",\"Настоящий детектив\",\"Настоящий детектив 2\",\"Настоящий детектив 3\",\"Настройщик\",\"Национальная безопасность\",\"Начало\",\"Наша Russia: Яйца судьбы\",\"Не брать живым\",\"Не время умирать\",\"Не говори ни слова\",\"Не говори никому\",\"Не грози южному централу, попивая сок у себя в квартале\",\"Не дыши\",\"Не пойман, не вор\",\"Не смотрите наверх\",\"Не те парни\",\"Не шутите с Зоханом\",\"Неадекватные люди\",\"Небесный капитан и мир будущего\",\"Неваляшка\",\"Неверная\",\"Неверный\",\"Невероятное\",\"Невероятные приключения факира\",\"Невероятный Халк\",\"Невидимка\",\"Невидимки\",\"Невидимый гость\",\"Невыносимая тяжесть огромного таланта\",\"Незваные гости\",\"Неисправимый Рон\",\"Немыслимое\",\"Необычайные приключения Адель\",\"Непобедимый\",\"Непотопляемые\",\"Неприкасаемые\",\"Неприкасаемые\",\"Непрощенная\",\"Нервы на пределе\",\"Несносные боссы\",\"Несносные боссы 2\",\"Неудачники\",\"Неудержимые\",\"Неудержимые\",\"Неудержимые 2\",\"Неудержимые 3\",\"Неуправляемый\",\"Неуязвимая мишень\",\"Неуязвимый\",\"Нефть\",\"Нечего терять\",\"Ниже нуля\",\"Никто\",\"Ничего личного\",\"Ничего хорошего в отеле «Эль Рояль»\",\"Новая рождественская сказка\",\"Новейший завет\",\"Новости со всех концов света\",\"Новые приключения Аладдина\",\"Нокаут\",\"Ноттинг Хилл\",\"Ночи в стиле буги\",\"Ночной дозор\",\"Ночные игры\",\"Ночь в баре Маккула\",\"Ночь в музее\",\"Ночь в музее 2. Смитсоновская битва\",\"Ночь в Роксбери\",\"О чем говорят мужчины\",\"О чём говорят мужчины. Продолжение\",\"О чем еще говорят мужчины\",\"О, где же ты, брат?\",\"Обещать - не значит жениться\",\"Обитаемый остров\",\"Обитаемый остров: Схватка\",\"Обитель зла\",\"Области тьмы\",\"Облачный атлас\",\"Обливион\",\"Обмен телами\",\"Образцовый самец\",\"Образцовый самец 2\",\"Обратная связь\",\"Обратно на Землю\",\"Обратный отсчет\",\"Обыкновенный преступник\",\"Обычная женщина\",\"Огонь\",\"Ограбление века\",\"Ограбление казино\",\"Ограбление на Бейкер-стрит\",\"Ограбление по-американски\",\"Ограбление по-итальянски\",\"Ограбление по-французски\",\"Одаренная\",\"Одержимость\",\"Одесса\",\"Один вдох\",\"Один день в Европе\",\"Один слуга, два господина\",\"Одиннадцать друзей Оушена\",\"Одинокие сердца\",\"Одинокий рейнджер\",\"Однажды в Америке\",\"Однажды в Голливуде\",\"Однажды в Ирландии\",\"Однажды в Мексике. Отчаянный 2\",\"Однажды в... Голливуде\",\"Однажды ночью\",\"Однажды укушенный\",\"Одноклассницы\",\"Однокурсники\",\"Озарк\",\"Окаянные дни\",\"Оккупант\",\"Олд бой\",\"Олигарх\",\"Омерзительная восьмерка\",\"Он и Она\",\"Опасная игра Слоун\",\"Оправданная жестокость\",\"Орлеан\",\"Оружейный барон\",\"Осада\",\"Оскар\",\"Ослепленный желаниями\",\"Особенности национальной охоты в зимний период\",\"Особо опасен\",\"Особо тяжкие преступления\",\"Особое мнение\",\"Остановившаяся жизнь\",\"Остин Пауэрс: Голдмембер\",\"Остров\",\"Остров Бергмана\",\"Остров проклятых\",\"Остров собак\",\"Острые козырьки\",\"Острые предметы\",\"От 180 и выше\",\"От печали до радости\",\"От семьи не убежишь\",\"Отель 'Гранд Будапешт'\",\"Отель 'Мэриголд': Лучший из экзотических\",\"Отель Парадизо\",\"Отец\",\"Откройте, полиция\",\"Откройте, полиция - 3\",\"Открытая дверь\",\"Отличница легкого поведения\",\"Отпетые мошенники\",\"Отпетые мошенники\",\"Отряд самоубийц\",\"Отряд самоубийц: Миссия навылет\",\"Отступники\",\"Отчаянный\",\"Отыграть назад\",\"Офис\",\"Офисное пространство\",\"Офицер и шпион\",\"Охота\",\"Охота на воров\",\"Охота на дикарей\",\"Охота на пиранью\",\"Охотник за разумом\",\"Охотник за разумом. Второй сезон\",\"Охотник на лис\",\"Охотники за головами\",\"Охотники за привидениями: Наследники\",\"Охотники за сокровищами\",\"Охотники на гангстеров\",\"Охотники на драконов\",\"Очень дикие штучки\",\"Очень мюрреевское Рождество\",\"Очень плохие парни\",\"Очень русский детектив\",\"Очень странные дела\",\"Папа\",\"Папа, сдохни\",\"Пара из будущего\",\"Параграф 78\",\"Паразиты\",\"Параллельные матери\",\"Парк культуры и отдыха\",\"Паркер\",\"Парни Южного Централа\",\"Пароль\",\"Парфюмер: история одного убийцы\",\"Пассажиры\",\"Патриот\",\"Патруль\",\"Патруль времени\",\"Пацаны\",\"Пацаны. Второй сезон\",\"Пацаны. Третий сезон\",\"Певец на свадьбе\",\"Пекло\",\"Пекло\",\"Первому игроку приготовиться\",\"Первый день оставшейся жизни\",\"Первый мститель\",\"Первый мститель: Другая война\",\"Первый мститель: Противостояние\",\"Перевал Дятлова\",\"Перевозчик\",\"Перевозчик 2\",\"Перевозчик 3\",\"Перегон\",\"Перекресток Миллера\",\"Перестрелка\",\"Перл-Харбор\",\"Персонаж\",\"Пес-призрак: путь самурая\",\"Песня ланча\",\"Петля времени\",\"Петровы в гриппе\",\"Пиксели\",\"Пила. Игра на выживание\",\"Пингвины Мадагаскара\",\"Пипец\",\"Пипец 2\",\"Пираты Карибского моря: Мертвецы не рассказывают сказки\",\"Пираты Карибского моря: На краю света\",\"Пираты Карибского моря: На странных берегах\",\"Пираты Карибского моря: Проклятье 'Черной жемчужины'\",\"Пираты Карибского моря: сундук мертвеца\",\"Питер FM\",\"План побега\",\"Планета Ка-Пэкс\",\"Планета обезьян\",\"Планета обезьян: Революция\",\"Планета страха\",\"Платон\",\"Плезантвиль\",\"Плейбой под прикрытием\",\"Плохая компания\",\"Плохие парни\",\"Плохие парни\",\"Плохие парни II\",\"Плохие парни навсегда\",\"Плохой Санта\",\"Пляжный бездельник\",\"По версии Барни\",\"По найму\",\"Побег из Алькатраса\",\"Побег из курятника\",\"Побег из тюрьмы Даннемора\",\"Победителей не судят\",\"Повар на колесах\",\"Повар-вор\",\"Повелитель бури\",\"Поговорим о сексе\",\"Под солнцем Тосканы\",\"Подводная братва\",\"Подержанные львы\",\"Подземка\",\"Подозрительные лица\",\"Подпольная империя\",\"Подручный Хадсакера\",\"Подъем с глубины\",\"Поезд на Юму\",\"Поездка\",\"Поездка в Америку 2\",\"Пожизненно\",\"Поиск\",\"Поймай меня, если сможешь\",\"Пока ее не было\",\"Покровские ворота\",\"Пол: Секретный материальчик\",\"Поле битвы - Земля\",\"Полицейский седан\",\"Полиция Майами: отдел нравов\",\"Полиция Токио\",\"Полночь в саду добра и зла\",\"Полный облом\",\"Полный привод\",\"Половое воспитание\",\"Полтора шпиона\",\"Полярный\",\"Помни\",\"Помутнение\",\"Порнографическая связь\",\"Порок на экспорт\",\"После прочтения сжечь\",\"После работы\",\"Последний дон I и II\",\"Последний самурай\",\"Последний уик-энд\",\"Последний шанс Харви\",\"Последняя дуэль\",\"Последняя капля\",\"Последняя фантазия\",\"Послезавтра\",\"Постановка\",\"Постановка - 2-й сезон\",\"Потерянный город\",\"Потусторонее\",\"Поцелуй бабочки\",\"Поцелуй дракона\",\"Поцелуй навылет\",\"Почему женщины убивают\",\"Почему женщины убивают 2\",\"Почему я?\",\"Правда о Чарли\",\"Правдивая история Красной Шапки\",\"Правдивая ложь\",\"Правила съема: метод Хитча\",\"Право на лево\",\"Правосудие\",\"Праздничный переполох\",\"Превосходство\",\"Превосходство Борна\",\"Преданный садовник\",\"Предприятие \\\"Божий дар\\\"\",\"Президент Линкольн: Охотник на вампиров\",\"Прекрасная эпоха\",\"Прекрасный день по соседству\",\"Престиж\",\"Преступник\",\"Прибытие\",\"Признания опасного человека\",\"Призрак\",\"Призрачная нить\",\"Призрачная шестерка\",\"Приключение Пикассо\",\"Приколисты\",\"Прикуп\",\"Принц Персии: пески времени\",\"Пристрели их\",\"Притяжение\",\"Приходи на меня посмотреть\",\"Пришельцы в Америке\",\"Пришельцы из прошлого\",\"Про любоff\",\"Программисты\",\"Прогулка\",\"Проект «Адам»\",\"Проклятие нефритового скорпиона\",\"Проклятый путь\",\"Прометей\",\"Просто кровь\",\"Простые вещи\",\"Профессионал\",\"Прочь\",\"Прошлой ночью в Сохо\",\"Прощайте, месье Хафманн\",\"Прощальный квартет\",\"Путь\",\"Пушки, телки и азарт\",\"Пятница\",\"Пятый элемент\",\"Радиозвезды\",\"Разборка в Маниле\",\"Разборки в стиле кунг-фу\",\"Разговорник\",\"Разделение\",\"Разлом Сан-Андреас\",\"Разрушение\",\"Разрыв\",\"Район № 9\",\"Ральф против Интернета\",\"Ранго\",\"Рапунцель: Запутанная история\",\"Расплата\",\"Рассказы\",\"Рататуй\",\"Реальная любовь\",\"Реальные парни\",\"Реальные упыри\",\"Револьвер\",\"Регтайм\",\"Резня\",\"Рейд 2\",\"Рейк\",\"Рейкьявик-Роттердам\",\"Реквием по мечте\",\"Рекрут\",\"Рестлер\",\"Решала\",\"Риддик\",\"Рик и Морти\",\"Робин Гуд\",\"Робин Гуд: Мужчины в трико\",\"Рождественская история\",\"Рождественская ночь в Барселоне\",\"Розовая пантера\",\"Розовая пантера\",\"Розовая пантера 2\",\"Рок-волна\",\"Рок-н-рольщик\",\"Рокетмен\",\"Рокки Бальбоа\",\"Роковая женщина\",\"Роковая красотка\",\"Роллербол\",\"Рома\",\"Ромео должен умереть\",\"Ромовый дневник\",\"Ронал-варвар\",\"Ронин\",\"Росомаха: Бессмертный\",\"Русалка\",\"Русская игра\",\"Русский бунт\",\"Рыбка по имени Ванда\",\"Рыцари справедливости\",\"Рыцарь дня\",\"РЭД\",\"РЭД 2\",\"Рэмбо IV\",\"Рэмпейдж\",\"С меня хватит\",\"С новым годом, мамы!\",\"Садоводы\",\"Сайнфелд\",\"Самозванцы\",\"Самолеты\",\"Самолеты: огонь и вода\",\"Самый жестокий год\",\"Самый лучший босс\",\"Самый лучший день\",\"Самый лучший фильм\",\"Самый лучший фильм 2\",\"Самый опасный человек\",\"Самый пьяный округ в мире\",\"Сатисфакция\",\"Сахара\",\"Сбежавшая невеста\",\"Свадьба\",\"Свет вокруг\",\"Свинья\",\"Свои\",\"Свой в доску\",\"Свой человек\",\"Связь\",\"Святые из Бундока\",\"Сделано в Америке\",\"Секретарша\",\"Секретные материалы: Хочу верить\",\"Секретный агент\",\"Секреты Лос-Анджелеса\",\"Сексуальная тварь\",\"Семейка Тененбаум\",\"Семейный брак\",\"Семь\",\"Семь психопатов\",\"Семья по-быстрому\",\"Сенсация\",\"Сердцеедки\",\"Сержант Билко\",\"Серпико\",\"Серьезный человек\",\"Сибирский цирюльник\",\"Симона\",\"Сириана\",\"Сити-Айленд\",\"Сицилиец\",\"Сказ про Федота-стрельца\",\"Скайлайн\",\"Сквозь снег\",\"Скорость-2\",\"Скотт Пилигрим против всех\",\"Скрытое\",\"Славные парни\",\"Славные парни\",\"Сладкий и гадкий\",\"Слоеный торт\",\"Сломанные цветы\",\"Смертельная гонка\",\"Смерть на похоронах\",\"Смокинг\",\"Смывайся\",\"Со мною вот что происходит\",\"Совершенно секретно\",\"Совокупность лжи\",\"Современная любовь\",\"Сокровища нации 2: Книга тайн\",\"Сокровище Амазонки\",\"Сокровище нации\",\"Солдаты неудачи\",\"Солдаты удачи\",\"Соловей-разбойник\",\"Солт\",\"Солянка по-кентуккийски\",\"Солярис\",\"Сомнение\",\"Сонная Лощина\",\"Сорокалетний девственник\",\"Соучастник\",\"Сохраняя веру\",\"Социальная сеть\",\"Союзники\",\"Спасите Грейс\",\"Список смертников\",\"Сплит\",\"Спутник\",\"Спящие\",\"Среди акул\",\"Срочная доставка\",\"Стажер\",\"Станционный смотритель\",\"Старикам тут не место\",\"Старые клячи\",\"Старый Генри\",\"Статский советник\",\"Статус: Свободен\",\"Стелс\",\"Стендапер по жизни\",\"Степфордские жены\",\"Стиляги\",\"Столетний старик, который вылез в окно и исчез\",\"Столкновение\",\"Стражи Галактики\",\"Стражи Галактики. Часть 2\",\"Страйк\",\"Страна ОЗ\",\"Страна чудес\",\"Странные дни\",\"Страсти Дон Жуана\",\"Страх и ненависть в Лас-Вегасе\",\"Стрелок\",\"Студия 30\",\"Стэн и Олли\",\"Суд над чикагской семеркой\",\"Судья\",\"Судья Дредд 3D\",\"Сука любовь\",\"Супербобровы\",\"Супербратья Марио\",\"Суперначо\",\"Суперплохие\",\"Суперсемейка\",\"Суперсемейка 2\",\"Суррогаты\",\"Сцены из супружеской жизни\",\"Счастливого дня смерти\",\"Счастливое число Слевина\",\"Счастливый конец\",\"Счастье\",\"Сыны анархии\",\"Сюрприз\",\"Та еще парочка\",\"Таинственная река\",\"Таинственный лес\",\"Тайлер Рейк: Операция по спасению\",\"Тайна в его глазах\",\"Тайна Ордена\",\"Тайна печати дракона\",\"Тайная жизнь домашних животных\",\"Тайная жизнь домашних животных 2\",\"Тайное окно\",\"Тайные агенты\",\"Такси\",\"Такси 2\",\"Такси 3\",\"Талантливый мистер Рипли\",\"Талли\",\"Таможня дает добро\",\"Танго втроем\",\"Танцуй отсюда\",\"Тариф Новогодний\",\"Тачки\",\"Тачки 2\",\"Тед Лассо\",\"Тед Лассо. Второй сезон\",\"Текст\",\"Телеведущий: Легенда о Роне Бургунди\",\"Телепорт\",\"Телефонная будка\",\"Тело\",\"Телохранитель жены киллера\",\"Телохранитель киллера\",\"Темные воды\",\"Темные времена\",\"Темный мир\",\"Темный рыцарь\",\"Темный рыцарь: Возрождение легенды\",\"Терминатор 3: Восстание машин\",\"Терминатор 4: Да придет спаситель\",\"Терминатор: Генезис\",\"Тетка Чарли\",\"Типа крутые легавые\",\"Тихая ночь\",\"Тихие омуты\",\"Тихий американец\",\"Тихий омут\",\"Только после вас\",\"Тонкая штучка\",\"Тоня против всех\",\"Топ Ган: Мэверик\",\"Тор\",\"Тор 2: Царство тьмы\",\"Тор: Любовь и гром\",\"Тор: Рагнарёк\",\"Торжество\",\"Тормоз\",\"Травка\",\"Трамбо\",\"Транс\",\"Трансформеры\",\"Трасса 60\",\"Тренировочный день\",\"Третья планета от Солнца\",\"Три билборда на границе Эббинга, Миссури\",\"Три девятки\",\"Три дня на побег\",\"Три идиота\",\"Три икса\",\"Три икса: Мировое господство\",\"Три короля\",\"Три секунды\",\"Три тысячи лет желаний\",\"Триггер\",\"Тринадцать друзей Оушена\",\"Тройная граница\",\"Тройной форсаж: токийский дрифт\",\"Трон: Наследие\",\"Троя\",\"Трудности перевода\",\"Трудный день\",\"Тряпичный союз\",\"Тупой жирный заяц\",\"Турецкий гамбит\",\"Турнир на выживание\",\"Ты - труп\",\"Ты, живущий\",\"Убей меня\",\"Убийства в одном здании\",\"Убийства в одном здании. Второй сезон\",\"Убийство\",\"Убийство в Вегасе\",\"Убийство в Гросс-Пойнте\",\"Убийство на пляже\",\"Убийца\",\"Убийца 2: Против всех\",\"Убийцы на замену\",\"Убить Билла: Фильм 2\",\"Убить Билла. Фильм 1\",\"Убить Смучи\",\"Убойная парочка: Старски и Хатч\",\"Убойный огонек\",\"Убрать перископ\",\"Угнать за 60 секунд\",\"Удар бутылкой\",\"Удача Логана\",\"Удивительная миссис Мейзел\",\"Удивительная миссис Мейзел. 4-й сезон\",\"Удивительная миссис Мэй\",\"Ужин с придурками\",\"Ужин с придурком\",\"Уимблдон\",\"Укрощение строптивых\",\"Уловка .44\",\"Ультиматум Борна\",\"Ультрафиолет\",\"Умники\",\"Умри, но не сейчас\",\"Уоллес и Громит: Проклятие кролика-оборотня\",\"Управление гневом\",\"Упражнения в прекрасном\",\"Успеть до полуночи\",\"Утреннее шоу\",\"Утреннее шоу. Второй сезон\",\"Фаворит\",\"Фаворитка\",\"Фантастическая четверка\",\"Фантастический Флиткрофт\",\"Фанфан-Тюльпан\",\"Фарго\",\"Фарго\",\"Фарго 2\",\"Фарго 3\",\"Фаренгейт 9/11\",\"Фауда\",\"Фердинанд\",\"Фобос. Клуб страха\",\"Фокус\",\"Форма воды\",\"Форс-мажоры\",\"Форсаж\",\"Форсаж 4\",\"Форсаж 5\",\"Форсаж 6\",\"Форсаж 7\",\"Форсаж 8\",\"Форсаж 9\",\"Форсаж: Хоббс и Шоу\",\"Фото за час\",\"Французский вестник. Приложение к газете «Либерти. Канзас ивнинг сан»\",\"Французский транзит\",\"Фрида\",\"Фрэнк\",\"Хамелеон\",\"Ханна. Совершенное оружие\",\"Характер\",\"Хардкор\",\"Харлан Кобен. Невиновен\",\"Хеллбой\",\"Хеллбой II: Золотая армия\",\"Хеллбой: Герой из пекла\",\"Хижина в лесу\",\"Хитмэн\",\"Хитрости\",\"Хищники\",\"Хоббит: Битва пяти воинств\",\"Хоббит: Нежданное путешествие\",\"Хоббит: Пустошь Смауга\",\"Ход королевы\",\"Хозяин морей: На краю Земли\",\"Холодная война\",\"Холодная гора\",\"Холодный расчет\",\"Холоп\",\"Хорас и Пит\",\"Хорошее время\",\"Хорошие парни\",\"Хороший год\",\"Хороший лжец\",\"Хороший мальчик\",\"Хороший, плохой, странный\",\"Хоттабыч\",\"Хоть раз в жизни\",\"Храбрая сердцем\",\"Хранители\",\"Хранители сети\",\"Хроники ломбарда\",\"Хроники обыкновенного безумия\",\"Хроники Риддика\",\"Хрустальный\",\"Худший человек на свете\",\"Хэнкок\",\"Хэппи\",\"Хэппи-энд\",\"Царство Небесное\",\"Царь скорпионов\",\"Цвет денег\",\"Цена страха\",\"Ч/Б\",\"Час пик\",\"Час пик 2\",\"Час пик 3\",\"Части тела\",\"Часто задаваемые вопросы о путешествиях во времени\",\"Чего хотят женщины\",\"Человек в железной маске\",\"Человек в футляре, человек в пальто и человек во фраке\",\"Человек из стали\",\"Человек на Луне\",\"Человек с бульвара КапуциноК\",\"Человек с Земли\",\"Человек у окна\",\"Человек эпохи Возрождения\",\"Человек-муравей\",\"Человек-муравей и Оса\",\"Человек-паук\",\"Человек-паук: Вдали от дома\",\"Человек-паук: Нет пути домой\",\"Человек, который убил Дон Кихота\",\"Черная вдова\",\"Черная дыра\",\"Черная зависть\",\"Черная кошка, белый кот\",\"Черная месса\",\"Черная молния\",\"Черная Орхидея\",\"Черная роза\",\"Чернобыль\",\"Черный дождь\",\"Черный клановец\",\"Черный ящик\",\"Чествование\",\"Честь семьи Прицци\",\"Четверо похорон и одна свадьба\",\"Четыре комнаты\",\"Четыре льва\",\"Четыре свадьбы и похороны\",\"Чикаго\",\"Чокнутый профессор-2\",\"Что знает Оливия\",\"Что могло быть хуже?\",\"Чудеса в Париже\",\"Чудо-женщина\",\"Чумовая пятница\",\"Шан-Чи и легенда десяти колец\",\"Шапито-шоу\",\"Шары ярости\",\"Шафт\",\"Шерлок Холмс\",\"Шерлок Холмс: Игра теней\",\"Шестиструнный самурай\",\"Шеф\",\"Шири\",\"Широко закрытые глаза\",\"Школа выживания\",\"Школа негодяев\",\"Школа рока\",\"Шлюха\",\"Шоколад\",\"Шоу начинается\",\"Шоу пошло не так\",\"Шпион\",\"Шпионские игры\",\"Шпионы как мы\",\"Шрэк\",\"Шрэк 2\",\"Шрэк навсегда\",\"Шрэк Третий\",\"Штурм Белого дома\",\"Шулеры\",\"Щедрость Перрье\",\"Эволюция\",\"Эволюция Борна\",\"Эд Вуд\",\"Эд из телевизора\",\"Эквилибриум\",\"Экипаж\",\"Элвис\",\"Эмир Кустурица\",\"Эмма.\",\"Энканто\",\"Эпизоды\",\"Эрин Брокович: красивая и решительная\",\"Эта - дурацкая - любовь\",\"Это мы\",\"Это старое чувство\",\"Эффект бабочки\",\"Эффект колибри\",\"Юленька\",\"Я - легенда\",\"Я жив\",\"Я знаю, что вы сделали прошлым летом\",\"Я иду искать\",\"Я очень возбужден\",\"Я создан для тебя\",\"Я худею\",\"Я, робот\",\"Я, я сам и Айрин\",\"Яды или Всемирная история отравлений\",\"Яйцеголовые\",\"Ямакаси\"]\n\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tmovies\n\t},\n});\n\nexport default app;"],"names":[],"mappings":"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"}